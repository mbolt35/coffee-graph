package bolt.web.coffee.io;

import java.io.File;
import java.util.List;

/**
 * Implementation prototype for the output options generated by Coffee-Graph.
 *
 * @author Matt Bolt
 */
public interface CoffeeGraphOptions {

    /**
     * Prints the file order on a single line, single-space delimited.
     *
     * @return {@code true} if Coffee-Graph should output the file order on a single line.
     */
    boolean isPrint();

    /**
     * Prints the file order on multiple lines, one per line.
     *
     * @return {@code true} if Coffee-Graph should output the file order, one file per line.
     */
    boolean isPrintLine();

    /**
     * Prints an expanded identifier dependency tree for the CoffeeScript source provided.
     *
     * @return {@code true} if Coffee-Graph should output the dependency tree.
     */
    boolean isPrintTree();

    /**
     * Prints the input options for Coffee-Graph
     *
     * @return {@code true} if Coffee-Graph should output the usage.
     */
    boolean isHelp();

    /**
     * Prints the Coffee-Graph, CoffeeScript, and Java version information.
     *
     * @return {@code true} if Coffee-Graph should output the version information.
     */
    boolean isVersion();

    /**
     * Compiles the input CoffeeScript source and outputs a single javascript file.
     *
     * @return {@code true} if CoffeeGraph should order and compile the CoffeeScript source.
     */
    boolean isCompile();

    /**
     * Omits the javascript security wrapper for compiled output.
     *
     * @return {@code true} if the CoffeeScript compiler should omit the security wrapper.
     */
    boolean isBare();

    /**
     * A {@code List} of {@code File} instances representing the source files or directories to build the dependency
     * graph for.
     */
    List<File> getSourceFiles();

    /**
     * The javascript output file for the Coffee-Graph compilation output.
     */
    File getOutputFile();
}
